// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:3.0.0.0
//      SpecFlow Generator Version:3.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SpecFlowFramework.Tests
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.0.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Short Term Loan")]
    public partial class ShortTermLoanFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "ShortTermLoan.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Short Term Loan", "\tIn order to check the finance calculator is working correctly", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 4
#line 5
 testRunner.Given("I am using Chrome", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("The finance calculator shows the correct STL details")]
        [NUnit.Framework.TestCaseAttribute("200", "£200", "MONTHLY", "3", "Monday", null)]
        [NUnit.Framework.TestCaseAttribute("210", "£210", "MONTHLY", "4", "Tuesday", null)]
        [NUnit.Framework.TestCaseAttribute("220", "£220", "MONTHLY", "4", "Tuesday", null)]
        [NUnit.Framework.TestCaseAttribute("230", "£230", "MONTHLY", "4", "Tuesday", null)]
        [NUnit.Framework.TestCaseAttribute("240", "£240", "MONTHLY", "4", "Tuesday", null)]
        [NUnit.Framework.TestCaseAttribute("250", "£250", "MONTHLY", "4", "Tuesday", null)]
        [NUnit.Framework.TestCaseAttribute("260", "£260", "MONTHLY", "4", "Tuesday", null)]
        [NUnit.Framework.TestCaseAttribute("270", "£270", "MONTHLY", "4", "Tuesday", null)]
        [NUnit.Framework.TestCaseAttribute("280", "£280", "MONTHLY", "4", "Tuesday", null)]
        [NUnit.Framework.TestCaseAttribute("290", "£290", "MONTHLY", "4", "Tuesday", null)]
        [NUnit.Framework.TestCaseAttribute("300", "£300", "MONTHLY", "4", "Tuesday", null)]
        [NUnit.Framework.TestCaseAttribute("310", "£310", "MONTHLY", "4", "Tuesday", null)]
        [NUnit.Framework.TestCaseAttribute("500", "£500", "MONTHLY", "2", "Sunday", null)]
        [NUnit.Framework.TestCaseAttribute("490", "£490", "MONTHLY", "5", "Wednesday", null)]
        [NUnit.Framework.TestCaseAttribute("510", "£510", "MONTHLY", "6", "Thursday", null)]
        [NUnit.Framework.TestCaseAttribute("520", "£520", "MONTHLY", "7", "Friday", null)]
        [NUnit.Framework.TestCaseAttribute("550", "£550", "MONTHLY", "8", "Saturday", null)]
        [NUnit.Framework.TestCaseAttribute("560", "£560", "MONTHLY", "9", "Sunday", null)]
        [NUnit.Framework.TestCaseAttribute("570", "£570", "MONTHLY", "10", "Sunday", null)]
        [NUnit.Framework.TestCaseAttribute("600", "£600", "MONTHLY", "11", "Monday", null)]
        [NUnit.Framework.TestCaseAttribute("700", "£700", "MONTHLY", "12", "Tuesday", null)]
        [NUnit.Framework.TestCaseAttribute("760", "£760", "MONTHLY", "2", "Wednesday", null)]
        [NUnit.Framework.TestCaseAttribute("800", "£800", "MONTHLY", "3", "Thursday", null)]
        [NUnit.Framework.TestCaseAttribute("820", "£820", "MONTHLY", "4", "Friday", null)]
        [NUnit.Framework.TestCaseAttribute("1000", "£1000", "MONTHLY", "5", "Saturday", null)]
        public virtual void TheFinanceCalculatorShowsTheCorrectSTLDetails(string loanAmount, string loanText, string repaymentType, string instalments, string paymentDay, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("The finance calculator shows the correct STL details", null, exampleTags);
#line 7
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 4
this.FeatureBackground();
#line 8
 testRunner.Given("I navigate to http://www.auden.co.uk/Credit/ShortTermLoan", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 9
 testRunner.And(string.Format("I select a loan amount of {0}", loanAmount), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 10
 testRunner.Then(string.Format("I expect the value of the loan to show as {0}", loanText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 11
 testRunner.Given(string.Format("I select a repayment type of {0}", repaymentType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 12
 testRunner.And(string.Format("I select an Instalment value of {0}", instalments), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 13
 testRunner.Then(string.Format("I expect the value of the instalment to show as {0}", instalments), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 14
 testRunner.Given("I expand the loan schedule options", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 15
 testRunner.And(string.Format("I choose a {0}", paymentDay), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 16
 testRunner.Then("I expect to see a day other than a weekend", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 17
 testRunner.And(string.Format("I expect the loan summary to be correct for a loan of {0} and {1} instalments", loanAmount, instalments), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
